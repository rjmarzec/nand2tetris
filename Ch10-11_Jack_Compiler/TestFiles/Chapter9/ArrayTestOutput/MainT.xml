<tokens>
<keyword> class </keyword>
<symbol> { </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<symbol> , </symbol>
<symbol> ; </symbol>
<symbol> = </symbol>
<symbol> . </symbol>
<symbol> ( </symbol>
<stringConstant> HOW MANY NUMBERS?  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> = </symbol>
<symbol> . </symbol>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<keyword> while </keyword>
<symbol> ( </symbol>
<symbol> &lt; </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<symbol> [ </symbol>
<symbol> ] </symbol>
<symbol> = </symbol>
<symbol> . </symbol>
<symbol> ( </symbol>
<stringConstant> ENTER THE NEXT NUMBER:  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> = </symbol>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> } </symbol>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<keyword> while </keyword>
<symbol> ( </symbol>
<symbol> &lt; </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<symbol> = </symbol>
<symbol> + </symbol>
<symbol> [ </symbol>
<symbol> ] </symbol>
<symbol> ; </symbol>
<symbol> = </symbol>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> } </symbol>
<symbol> . </symbol>
<keyword> int </keyword>
<symbol> ( </symbol>
<stringConstant> THE AVERAGE IS:  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> . </symbol>
<keyword> int </keyword>
<symbol> ( </symbol>
<symbol> / </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> . </symbol>
<keyword> int </keyword>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>