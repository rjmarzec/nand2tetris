function Board.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 0
not
pop this 6
push this 0
push this 1
call Math.multiply 2
call Array.new 1
pop this 3
push constant 0
pop this 5
push this 0
push this 1
call Math.multiply 2
call Random.new 1
pop this 7
push pointer 0
call Board.clearBoard 1
pop temp 0
push pointer 0
return
function Board.updateBoard 2
push argument 0
pop pointer 0
push argument 1
pop local 0
push local 0
pop local 1
push constant 0
pop this 6
push local 0
push constant 134
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 129
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
label WHILE_EXP0
push constant 0
not
not
if-goto WHILE_END0
push local 0
push constant 133
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
call Output.printInt 1
pop temp 0
push pointer 0
push local 1
call Board.moveBoard 2
pop temp 0
push constant 0
not
pop this 6
push constant 0
return
label IF_FALSE2
push local 0
push constant 130
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
call Output.printInt 1
pop temp 0
push pointer 0
push local 1
call Board.moveBoard 2
pop temp 0
push constant 0
not
pop this 6
push constant 0
return
label IF_FALSE3
push local 0
pop local 1
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function Board.moveBoard 0
push argument 0
pop pointer 0
push argument 1
push constant 130
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push constant 0
not
call Board.moveBoardLeftRight 2
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
push constant 131
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push constant 0
not
call Board.moveBoardUpDown 2
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 1
push constant 132
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push constant 0
call Board.moveBoardLeftRight 2
pop temp 0
push constant 0
return
label IF_FALSE2
push argument 1
push constant 133
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push constant 0
call Board.moveBoardUpDown 2
pop temp 0
push constant 0
return
label IF_FALSE3
push constant 0
return
function Board.moveBoardUpDown 6
push argument 0
pop pointer 0
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
push constant 1
sub
lt
not
if-goto WHILE_END1
push local 1
push constant 1
add
pop local 2
label WHILE_EXP2
push local 2
push this 1
lt
not
if-goto WHILE_END2
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 4
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
add
pop this 4
push local 2
push this 1
add
pop local 2
label IF_FALSE2
label IF_FALSE1
push local 2
push this 1
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
sub
pop local 1
push local 1
pop local 2
label IF_FALSE5
push local 2
push this 1
add
pop local 2
label IF_FALSE4
label IF_FALSE3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP3
push local 0
push this 0
lt
not
if-goto WHILE_END3
push this 1
push constant 1
sub
pop local 1
label WHILE_EXP4
push local 1
push constant 0
gt
not
if-goto WHILE_END4
push local 1
push constant 1
sub
pop local 2
label WHILE_EXP5
push local 2
push constant 1
neg
gt
not
if-goto WHILE_END5
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 4
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
add
pop this 4
push local 2
push this 1
sub
pop local 2
label IF_FALSE7
label IF_FALSE6
push local 2
push this 1
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 0
push local 1
push this 1
call Math.multiply 2
add
push this 3
add
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
push local 1
pop local 2
label IF_FALSE10
push local 2
push this 1
sub
pop local 2
label IF_FALSE9
label IF_FALSE8
push local 2
push constant 1
sub
pop local 2
goto WHILE_EXP5
label WHILE_END5
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP4
label WHILE_END4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
label IF_END0
push pointer 0
call Board.spawnNewBlock 1
pop temp 0
push constant 0
return
function Board.moveBoardLeftRight 6
push argument 0
pop pointer 0
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 0
push constant 1
sub
lt
not
if-goto WHILE_END1
push local 1
push constant 1
add
pop local 0
label WHILE_EXP2
push local 0
push this 0
lt
not
if-goto WHILE_END2
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 4
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
add
pop this 4
push local 0
push this 0
add
pop local 0
label IF_FALSE2
label IF_FALSE1
push local 0
push this 0
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
sub
pop local 1
push local 1
pop local 0
label IF_FALSE5
push local 0
push this 0
add
pop local 0
label IF_FALSE4
label IF_FALSE3
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
push constant 0
pop local 2
label WHILE_EXP3
push local 2
push this 1
lt
not
if-goto WHILE_END3
push this 0
push constant 1
sub
pop local 1
label WHILE_EXP4
push local 1
push constant 0
gt
not
if-goto WHILE_END4
push local 1
push constant 1
sub
pop local 0
label WHILE_EXP5
push local 0
push constant 1
neg
gt
not
if-goto WHILE_END5
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 4
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
add
pop this 4
push local 0
push this 0
sub
pop local 0
label IF_FALSE7
label IF_FALSE6
push local 0
push constant 1
neg
gt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 1
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
push this 1
call Math.multiply 2
add
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
push local 1
pop local 0
label IF_FALSE10
push local 0
push this 0
sub
pop local 0
label IF_FALSE9
label IF_FALSE8
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP5
label WHILE_END5
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP4
label WHILE_END4
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
label IF_END0
push pointer 0
call Board.spawnNewBlock 1
pop temp 0
push constant 0
return
function Board.spawnNewBlock 5
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 4
label WHILE_EXP0
push local 4
push this 1
push this 0
call Math.multiply 2
lt
not
if-goto WHILE_END0
push local 4
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
label IF_FALSE0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 0
push constant 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 7
push local 0
push constant 1
sub
call Random.randRange 2
pop local 1
push constant 1
neg
pop local 0
push constant 0
pop local 4
label WHILE_EXP1
push local 4
push this 1
push this 0
call Math.multiply 2
lt
not
if-goto WHILE_END1
push local 4
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 1
add
pop local 0
push local 0
push local 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 7
push constant 3
call Random.randRange 2
pop local 2
push local 2
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 4
push this 3
add
push this 2
push constant 2
call Math.multiply 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END4
label IF_FALSE4
push local 4
push this 3
add
push this 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END4
label IF_FALSE3
label IF_FALSE2
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE1
push constant 0
return
function Board.clearBoard 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 3
call Array.dispose 1
pop temp 0
push constant 16
call Array.new 1
pop this 3
push constant 0
return
function Board.printBoard 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop this 6
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
label WHILE_EXP0
push local 1
push constant 4
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 4
lt
not
if-goto WHILE_END1
push local 0
push local 1
push constant 4
call Math.multiply 2
add
push this 3
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 32
call String.appendChar 2
call Output.printChar 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
call Output.println 0
pop temp 0
push local 1
push constant 1
add
pop local 1
push constant 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.updateRandom 0
push argument 0
pop pointer 0
push argument 1
pop this 7
push constant 0
return
function Board.getSize 0
push argument 0
pop pointer 0
push this 0
push this 1
call Math.multiply 2
return
function Board.getDoPrint 0
push argument 0
pop pointer 0
push this 6
return
function Board.getScore 0
push argument 0
pop pointer 0
push this 4
return
function Board.getIsGameOver 0
push argument 0
pop pointer 0
push this 5
return
