// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Average/Main.jack

// The game 2048, but remade in the Jack language

class Main 
{
    field Random random;
	field int boardSize;
	field Array boardArrays;
	field Array innerBoardArray;
	field int score;
	field int currentKey;

	//Loop variables
	field int i;
	field int j;

	method void main() 
	{
		let random = Random.new(0);
		let boardSize = 4;
		let boardArrays = Array.new(boardSize);
		let score = 0;

		//Setting up the 2D array that makes up the game's board so that is formatted like:
		// [ [0][0], [1][0], [2][0], [3][0] ]
		// [ [0][1], [1][1], [2][1], [3][1] ]
		// [ [0][2], [1][2], [2][2], [3][2] ]
		// [ [0][3], [1][3], [2][3], [3][3] ]

		do clearBoard();

		//The Main Loop, which handles inputs, block spawning, and more
		while(true)
		{
			// 130 = left, 131 = up, 132 = right, 133 = down
			let currentKey = Keyboard.keyPressed();
			if(currentKey = 131)
			{
				// up
				do move(0);
			}
			if(currentKey = 130)
			{
				// left
				do move(1);
			}
			if(currentKey = 133)
			{
				// down
				do move(2);
			}
			if(currentKey = 132)
			{
				// right
				do move(3);
			}
		}
		return;
	}

	method void clearBoard()
	{
		let i = 0;
		let j = 0;
		while(i < boardSize)
		{
			let boardArrays[i] = Array.new(boardSize);
			let i = i+1;
		}
		let i = 0;
		while(i < boardSize)
		{
			let j = 0;
			let innerBoardArray = boardArrays[i];
			while(j < boardSize)
			{
				let innerBoardArray[j] = 0;
				let j = j+1;
			}
			let i = i+1;
		}
		return;
	}

	// 0-up; 1-left; 2-down; 3-right
	method void move(int direction)
	{
		var boolean repeatMove;
		let repeatMove = true;

		let i = 0;
		let j = 0;

		//Up
		if(direction = 0)
		{
			while(repeatMove)
			{
				let repeatMove = false;
				let i = 0;
				let j = 0;

				while(j < boardSize)
				{
					while()

					let j = j+1;
				}
			}
		}

		//Down
		if(direction = 2)
		{

		}

		//Left
		if(direction = 1)
		{

		}

		//Right
		if(direction = 3)
		{

		}
		return;
	}
		

	/*
	// Method to be implemented at a later point:

	method void spawnBlock()
	{}

	method void drawBoard()
	{}

	*/
}

